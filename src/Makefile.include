.PHONY: FORCE

LIBBITCOIN=$(top_builddir)/src/libbitcoin.a
LIBLEVELDB=$(top_builddir)/src/leveldb/libleveldb.a
LIBMEMENV=$(top_builddir)/src/leveldb/libmemenv.a
LIBBITCOINQT=$(top_builddir)/src/qt/libbitcoinqt.a

$(LIBBITCOIN):
	$(MAKE) -C $(top_builddir)/src $(@F)

$(LIBLEVELDB) $(LIBMEMENV):
	$(MAKE) -C $(top_builddir)/src leveldb/$(@F)

$(LIBBITCOINQT):
	$(MAKE) -C $(top_builddir)/src/qt $(@F)

.mm.o:
	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<

.rc.o:
	@test -f $(WINDRES) && $(WINDRES) -i $< -o $@ || \
          echo error: could not build $@

ui_%.h: %.ui
	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
	@test -f $(UIC) && $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@
	sed -i '/^\*\*.*Created:/d' $(abs_builddir)/$@
	sed -i '/^\*\*.*by:/d' $(abs_builddir)/$@

%.moc: %.cpp
	$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
	sed -i '/^\*\*.*Created:/d' $@
	sed -i '/^\*\*.*by:/d' $@

moc_%.cpp: %.h
	$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
	sed -i '/^\*\*.*Created:/d' $@
	sed -i '/^\*\*.*by:/d' $@

%.qm: %.ts
	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
	@test -f $(LRELEASE) && $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \
	 echo error: could not build $(abs_builddir)/$@

%.pb.cc %.pb.h: %.proto
	test -f $(PROTOC) && $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)  || \
	  echo error: could not build $@
